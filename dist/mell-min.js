const html={content:null,atribute:null,loc:null,insert(t,e,n){this.content=t,this.atribute=document.querySelector(e),this.loc=n,this.makeInsert()},delete(t){this.atribute=document.querySelector(t),this.makeDelete()},get(t){return this.atribute=document.querySelector(t),this.makeGet()},makeInsert(){local=this.atribute,local.insertAdjacentHTML(this.loc,this.content)},makeDelete(){this.atribute.remove()},makeGet(){return this.atribute.innerHTML}};modclass={content:null,atribute:null,add(t,e){this.content=t,this.atribute=document.querySelector(e),this.makeAdd()},remove(t,e){this.content=t,this.atribute=document.querySelector(e),this.makeRemove()},makeAdd(){local=this.atribute,local.classList.add(this.content)},makeRemove(){local=this.atribute,local.classList.remove(this.content)}};const click=function(t,e){atribute=document.querySelector(t),atribute.onclick=make(e)},docready=function(t){document.addEventListener("DOMContentLoaded",make(t))};function make(t){return t}const load=function(t,e){xhttp=new XMLHttpRequest,xhttp.onreadystatechange=function(){4==this.readyState&&200==this.status?(console.log(this.readyState+" / "+this.status),html.insert(xhttp.responseText,e,"beforebegin")):console.log(this.readyState+" / "+this.status)},xhttp.open("GET",t,!0),xhttp.send()},mell={html:html,class:modclass,click:click,docready:docready,load:load};